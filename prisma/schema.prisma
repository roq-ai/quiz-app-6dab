generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answer {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content     String    @db.VarChar(255)
  is_correct  Boolean
  question_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  question    question? @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model client {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quiz        quiz[]
}

model leaderboard {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  score      Int
  user_id    String?  @db.Uuid
  quiz_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  quiz       quiz?    @relation(fields: [quiz_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model question {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content    String   @db.VarChar(255)
  quiz_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  answer     answer[]
  quiz       quiz?    @relation(fields: [quiz_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model quiz {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String        @db.VarChar(255)
  client_id   String?       @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  leaderboard leaderboard[]
  question    question[]
  client      client?       @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  client      client[]
  leaderboard leaderboard[]
}
